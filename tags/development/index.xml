<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Development on Hola!! </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://tommykw.github.io/tags/development/</link>
    <language>en-us</language>
    
    
    <updated>Sat, 30 Apr 2016 18:19:22 JST</updated>
    
    <item>
      <title>Splash screen</title>
      <link>http://tommykw.github.io/post/splash-screen/</link>
      <pubDate>Sat, 30 Apr 2016 18:19:22 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/splash-screen/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Groovy</title>
      <link>http://tommykw.github.io/post/groovy/</link>
      <pubDate>Tue, 26 Apr 2016 08:26:15 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/groovy/</guid>
      <description>&lt;p&gt;It is a dynamic programming language that runs on the JVM.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kotlin associate</title>
      <link>http://tommykw.github.io/post/kotlin-associate/</link>
      <pubDate>Mon, 25 Apr 2016 16:20:36 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/kotlin-associate/</guid>
      <description>&lt;p&gt;According to the kotlin document, you can see that you have to
implement that return Map.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;inline fun &amp;lt;T, K, V&amp;gt; Sequence&amp;lt;T&amp;gt;.associate(
    transform: (T) -&amp;gt; Pair&amp;lt;K, V&amp;gt;
): Map&amp;lt;K, V&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It can be used as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).associate { it to it * 2}
{1=2, 2=4, 3=6, 4=8, 5=10}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aot</title>
      <link>http://tommykw.github.io/post/aot/</link>
      <pubDate>Mon, 25 Apr 2016 16:20:08 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/aot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>jit</title>
      <link>http://tommykw.github.io/post/jit/</link>
      <pubDate>Mon, 25 Apr 2016 16:20:04 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/jit/</guid>
      <description></description>
    </item>
    
    <item>
      <title>What is the different concatMap and flatMap</title>
      <link>http://tommykw.github.io/post/what-is-the-different-concatMap-flatMap/</link>
      <pubDate>Fri, 22 Apr 2016 13:53:18 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/what-is-the-different-concatMap-flatMap/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neuroscience</title>
      <link>http://tommykw.github.io/post/neuroscience/</link>
      <pubDate>Thu, 21 Apr 2016 16:53:15 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/neuroscience/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java synchronized</title>
      <link>http://tommykw.github.io/post/java-synchronized/</link>
      <pubDate>Wed, 20 Apr 2016 08:27:01 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/java-synchronized/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kotlin any none all</title>
      <link>http://tommykw.github.io/post/kotlin-any-none-all/</link>
      <pubDate>Tue, 19 Apr 2016 22:58:20 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/kotlin-any-none-all/</guid>
      <description>

&lt;p&gt;In this artile describes the colletion function of the stream api of Kotlin.&lt;/p&gt;

&lt;h2 id=&#34;any:5d579fe2b66ec26434ad62ec9e0f74f8&#34;&gt;any&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Or also applies to conditions in one&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).any { it &amp;gt; 4 }
true
&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).any { it &amp;gt; 5 }
false
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;none:5d579fe2b66ec26434ad62ec9e0f74f8&#34;&gt;none&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It dose not apply to the conditions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).none { it &amp;gt; 6 }
true
&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).none { it &amp;gt; 4 }
false
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;all:5d579fe2b66ec26434ad62ec9e0f74f8&#34;&gt;all&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It applies to all conditions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).all { it &amp;gt; 0 }
true
&amp;gt;&amp;gt;&amp;gt; listOf(1,2,3,4,5).all { it &amp;gt; 4 }
false
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Computer Graphics Engineering</title>
      <link>http://tommykw.github.io/post/gc-engineering/</link>
      <pubDate>Sat, 16 Apr 2016 13:56:19 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/gc-engineering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Image Processing Engineering</title>
      <link>http://tommykw.github.io/post/image-processing-engineering/</link>
      <pubDate>Sat, 16 Apr 2016 13:56:05 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/image-processing-engineering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Information Control Engineering</title>
      <link>http://tommykw.github.io/post/information-control-engineering/</link>
      <pubDate>Sat, 16 Apr 2016 13:43:06 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/information-control-engineering/</guid>
      <description>

&lt;p&gt;In a system having an input and an output, a method of the freely
control the output.&lt;/p&gt;

&lt;p&gt;Control theory intented for mathematical model is the theory related
to control using mainly mathematics.&lt;/p&gt;

&lt;h2 id=&#34;classical-control-theory:e9bfbf0cf692edfd5ca404361a329604&#34;&gt;Classical control theory&lt;/h2&gt;

&lt;h2 id=&#34;modern-control-theory:e9bfbf0cf692edfd5ca404361a329604&#34;&gt;Modern control theory&lt;/h2&gt;

&lt;h2 id=&#34;post-modern-control-theory:e9bfbf0cf692edfd5ca404361a329604&#34;&gt;Post modern control theory&lt;/h2&gt;

&lt;h2 id=&#34;intelligent-control:e9bfbf0cf692edfd5ca404361a329604&#34;&gt;Intelligent Control&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Multidex</title>
      <link>http://tommykw.github.io/post/multidex/</link>
      <pubDate>Fri, 15 Apr 2016 21:23:09 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/multidex/</guid>
      <description>&lt;p&gt;This article describes the multidex in Android.
dex file that exist in th package of the apk. that of the Dalvik Executable.
Generated is converted from a class file.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monads tutorial</title>
      <link>http://tommykw.github.io/post/monads-tutorial/</link>
      <pubDate>Tue, 12 Apr 2016 15:34:28 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/monads-tutorial/</guid>
      <description>&lt;p&gt;In this article I check that how to use Monads.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stack hello world</title>
      <link>http://tommykw.github.io/post/stack-hello-world/</link>
      <pubDate>Wed, 06 Apr 2016 08:08:07 JST</pubDate>
      
      <guid>http://tommykw.github.io/post/stack-hello-world/</guid>
      <description>

&lt;p&gt;Stack is famous for Haskell package manager.
As a web developer I am used to clear tutorial that I can understand and learn.
Let&amp;rsquo;s make a sample app.&lt;/p&gt;

&lt;h2 id=&#34;installing-stack:89ac81d93784c829817004930eb05e8f&#34;&gt;Installing Stack&lt;/h2&gt;

&lt;p&gt;Install on OSX through homebrew&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew update
$ brew install haskell-stack
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;creating-a-new-app:89ac81d93784c829817004930eb05e8f&#34;&gt;Creating a new app&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ stack new hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Stack has some templates you can use your app.&lt;/p&gt;

&lt;h2 id=&#34;installing-ghc:89ac81d93784c829817004930eb05e8f&#34;&gt;Installing GHC&lt;/h2&gt;

&lt;p&gt;Run this in your app.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ stack setup
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;building-an-executable:89ac81d93784c829817004930eb05e8f&#34;&gt;Building an Executable&lt;/h2&gt;

&lt;p&gt;You can build with stack build&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ stack build
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;run-the-app:89ac81d93784c829817004930eb05e8f&#34;&gt;Run the app&lt;/h2&gt;

&lt;p&gt;Runt the app. This is cool.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ stack exec hello-world-exe
SomeFunc
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
